--Getting distinct Campaign Count

SELECT COUNT(DISTINCT utm_campaign) AS 'Campaign Count'
FROM page_visits;


--Getting distinct Sources
SELECT COUNT(DISTINCT utm_source) AS 'Source Count'
from page_visits;


--Determining relationship between Campaign and Source
SELECT DISTINCT utm_campaign AS Campaign,
	utm_source as Sources
FROM page_visits;


--Determining pagest hat are contained on the CoolTShirts website
SELECT DISTINCT page_name AS Page
FROM page_visits;


--Determing the unique first touches by id by creating a temp table
WITH first_touch AS(
	SELECT user_id,
		MIN(timestamp) as first_touch_at
	FROM page_visits
	GROUP BY user_id),
    
--Determining the unique first touches by Source with Campaign joined
--by id and timestamp by creating a second temp table
fl_attr AS(
	Select ft.user_id,
		ft.first_touch_at,
		pv.utm_source,
		pv.utm_campaign
	FROM first_touch ft
	JOIN page_visits pv
		ON ft.user_id = pv.user_id
		AND ft.first_touch_at = pv.timestamp)
      
--Putting it together, determining the total number of uique first 
--touches by id with Source and Campaign
SELECT fl_attr.utm_source AS Source,
	fl_attr.utm_campaign as Campaign,
	COUNT(*) AS Count
FROM fl_attr
Group by 1, 2
ORDER BY 3 DESC;


--Determing the unique first touches by id by creating a temp table
WITH last_touch AS(
	SELECT user_id,
	  MAX(timestamp) as last_touch_at
	FROM page_visits
	GROUP BY user_id),
    
--Determining the unique last touches by Source with Campaign joined
--by id and timestamp by creating a second temp table
lt_attr AS(
	Select lt.user_id,
		lt.last_touch_at,
		pv.utm_source,
		pv.utm_campaign
	FROM last_touch lt
	JOIN page_visits pv
		ON lt.user_id = pv.user_id
		AND lt.last_touch_at = pv.timestamp)
      
--Putting it together, determining the total number of uique first 
--touches by id with Source and Campaign
SELECT lt_attr.utm_source AS Source,
	lt_attr.utm_campaign as Campaign,
    	COUNT(*) AS Count
FROM lt_attr
Group by 1, 2
ORDER BY 3 DESC;


--Determing the total number of visitors who made a purchase
SELECT COUNT(DISTINCT user_id)
FROM page_visits
WHERE page_name = '4 - purchase';


--Count of last touches on the purchase page by Campaign

WITH last_touch AS (
	SELECT user_id,
  			 MAX(timestamp) as last_touch_at
  FROM page_visits
  WHERE page_name = '4 - purchase'
  GROUP BY user_id),
  
  lt_attr AS (
    SELECT lt.user_id,
    		lt.last_touch_at,
    		pv.utm_source,
    		pv.utm_campaign
    FROM last_touch lt
    JOIN page_visits pv
    	ON lt.user_id = pv.user_id
    	AND lt.last_touch_at = pv.timestamp)
      
SELECT lt_attr.utm_source AS Source,
	lt_attr.utm_campaign AS Campaign,
	COUNT (*) AS COUNT
FROM lt_attr
GROUP BY 1, 2
ORDER BY 3 DESC;


--Another thing to consider, Source for 
--First Touch

SELECT utm_source AS Source,
	COUNT (DISTINCT user_id) AS 'First Touch'
FROM page_visits
GROUP BY 1
ORDER BY 2 DESC;


--Also, Source for Purchases

SELECT utm_source AS Source,
	COUNT (DISTINCT user_id) AS 'Purchase'
FROM page_visits
WHERE page_name = '4 - purchase'
GROUP BY 1
ORDER BY 2 DESC;